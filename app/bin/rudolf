#!/usr/bin/env php
<?php

define('WEB_ROOT', dirname(dirname(__DIR__)));

if (!file_exists('composer.json')) {
    echo out('Must be execute in rudolf root! (where is composer.json)', 'red', true);
    die;
}

include 'app/defines.php';

switch (isset($argv[1]) ? $argv[1] : 'help') {
    case 'install':
        install();
        break;

    case 'clear-cache':
        clearCache();
        break;

    case 'update':
        update();
        break;

    case 'help':
    default:
        help();
        break;
}

/**
 * Install rudolf.
 */
function install()
{
    if (file_exists('app/config')) {
        echo out('Rudolf already installed!', 'red').PHP_EOL;
        die;
    }

    echo out('Creating catalogs...', 'green');
    mkdir('app/config');
    mkdir('app/log');
    mkdir('app/temp');
    mkdir('content/themes');
    mkdir('content/themes/front');
    mkdir('content/themes/admin');
    mkdir('content/uploads');
    mkdir('content/plugins');
    echo out(' done.', null, true);

    downloadComposer();

    echo out('Instaling composer packages...', 'green');
    system('php '.WEB_ROOT.'/composer.phar install --quiet');
    echo out(' done.', null, true);

    echo out('Removing composer.phar...', 'green');
    unlink(WEB_ROOT.'/composer.phar');
    echo out(' done.', null, true);
}

/**
 * Clear cache.
 */
function clearCache()
{
    echo out('Clear app/temp...', 'green');
    system('rm -rf '.WEB_ROOT.'/app/temp/*');
    echo out(' done.', null, true);
}

/**
 * Update rudolf.
 */
function update()
{
    if (!file_exists(WEB_ROOT.'/app/config')) {
        echo out('Rudolf not installed!', 'red').PHP_EOL;
        die;
    }

    downloadComposer();
    echo out('Updating composer packages...', 'green');
    system('php '.WEB_ROOT.'/composer.phar update --quiet');
    echo out(' done.', null, true);
}

/**
 * Download and install composer.
 */
function downloadComposer()
{
    if (file_exists(WEB_ROOT.'/composer.phar')) {
        return;
    }
    echo out('Downloading composer...', 'green');
    copy('https://getcomposer.org/installer', WEB_ROOT.'/composer-setup.php');
    echo out(' done.', null, true);

    echo out('Installing composer...', 'green');
    system('php '.WEB_ROOT.'/composer-setup.php --quiet');
    unlink(WEB_ROOT.'/composer-setup.php');
    echo out(' done.', null, true);
}

/**
 * Display help message.
 */
function help()
{
    fwrite(STDERR,
        out(NAME, 'green').' '.out(VER_NAME, 'brown', true).
        PHP_EOL.
        out('Usage:', 'brown', true).
        '  command [command]'.PHP_EOL.
        PHP_EOL.
        out('Available commands:', 'brown', true).
        '  '.out('clear-cache', 'green').'  clear app/temp/ directory'.PHP_EOL.
        '  '.out('help', 'green').'         display this message'.PHP_EOL.
        '  '.out('install', 'green').'      install rudolf, if not installed yet'.PHP_EOL.
        '  '.out('update', 'green').'       update packages, modules and plugins'.PHP_EOL
    );
}

/**
 * Colorize output.
 *
 * @param string $text    Text to colorize
 * @param mixed  $color   Color style
 * @param bool   $newLine
 */
function out($text, $color = null, $newLine = false)
{
    $colors = [
        'black' => '0;30',
        'red' => '0;31',
        'green' => '0;32',
        'brown' => '0;33',
        'blue' => '0;34',
        'purple' => '0;35',
        'cyan' => '0;36',
        'light_gray' => '0;37',
        'dark_gray' => '1;30',
        'light_red' => '1;31',
        'light_green' => '1;32',
        'yellow' => '1;33',
        'light_blue' => '1;34',
        'light_purple' => '1;35',
        'light_cyan' => '1;36',
        'white' => '1;37',
    ];

    if (isset($colors[$color])) {
        $format = str_replace('{color}', $colors[$color], "\e[{color}m%s\e[0m");
    } else {
        $format = '%s';
    }

    if ($newLine) {
        $format .= PHP_EOL;
    }

    return sprintf($format, $text);
}
